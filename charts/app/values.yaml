replicaCount: 1

image:
  repository: ""
  tag: ""
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}

securityContext: {}

resources: {}

service:
  type: ClusterIP
  port: 8080

ingressHostName: kg-exporter

livenessProbe:
  failureThreshold: 3
  httpGet:
    path: /
    port: 8080
    scheme: HTTP
  initialDelaySeconds: 15
  periodSeconds: 10
  timeoutSeconds: 5

readinessProbe:
  httpGet:
    path: /
    port: 8080
    scheme: HTTP
  initialDelaySeconds: 15
  periodSeconds: 10
  timeoutSeconds: 5

settings:
  builder:
    builder_tick_seconds: 60
    node_port: 80
    single_slice_url: http://metadata-service:80
    is_single_slice: False
    queries:
      node_queries:

        - measurement_id: Energy.Usage
          source: Kepler
          unit: milliwatts
          property: Energy.Usage
          query: |
            label_replace(
              irate(kepler_node_platform_joules_total[5m] @{{now}}),
              "resource",
              "$1",
              "exported_instance",
              "(.+)"
            )
          result_parser: PROMETHEUS_PARSER

        - measurement_id: CPU.Available
          subresource: CPU
          source: NodeExporter
          unit: Core
          property: CPU.Available
          aggregation:
            period_seconds: 300
            function: average
          query: |
            label_replace(
              sum(
                rate(
                  node_cpu_seconds_total{mode="idle", service="monitoring-stack-prometheus-node-exporter"}[5m] @{{now}}
                )
              ) by (node),
              "resource",
              "$1",
              "node",
              "(.+)"
            )
          result_parser: PROMETHEUS_PARSER

        - measurement_id: Available
          subresource: RAM
          source: NodeExporter
          unit: bytes
          property: RAM.Available
          query: |
            label_replace(
              node_memory_MemFree_bytes{service="monitoring-stack-prometheus-node-exporter"} @{{now}},
              "resource",
              "$1",
              "node",
              "(.+)"
            )
          result_parser: PROMETHEUS_PARSER

        - measurement_id: Available
          subresource: Storage
          source: cAdvisor
          unit: bytes
          property: Storage.Available
          query: |
            label_replace(
              container_fs_usage_bytes{device="/dev/sda2"} @{{now}},
              "resource",
              "$1",
              "instance",
              "(.+)"
            )
          result_parser: PROMETHEUS_PARSER

      pod_queries:

        - measurement_id: Usage
          subresource: Network
          source: cAdvisor
          unit: bytes
          property: Network.Usage
          aggregation:
            period_seconds: 300
            function: average
          query: |
            label_replace(
              sum(
                rate(
                  container_network_receive_bytes_total[5m] @{{now}}
                )
              ) by (pod) +
              sum(
                rate(
                  container_network_transmit_bytes_total[5m] @{{now}}
                )
              ) by (pod),
              "resource",
              "$1",
              "pod",
              "(.+)"
            )
          result_parser: PROMETHEUS_PARSER

        - measurement_id: Usage
          subresource: Storage
          source: cAdvisor
          unit: bytes
          property: Storage.Usage
          aggregation:
            period_seconds: 300
            function: average
          query: |
            label_replace(
              sum(
                rate(
                  container_fs_reads_bytes_total{device="/dev/sda"}[5m] @{{now}}
                )
              ) by (pod)
                +
              sum(
                rate(
                  container_fs_writes_bytes_total{device="/dev/sda"}[5m] @{{now}}
                )
              ) by (pod),
              "resource",
              "$1",
              "pod",
              "(.+)"
            )
          result_parser: PROMETHEUS_PARSER

        - measurement_id: Usage
          subresource: CPU
          source: cAdvisor
          unit: bytes
          property: CPU.Usage
          aggregation:
            period_seconds: 300
            function: average
          query: |
            label_replace(
              sum(
                rate(
                  container_cpu_usage_seconds_total[5m] @{{now}}
                )
              ) by (pod),
              "resource",
              "$1",
              "pod",
              "(.+)"
            )
          result_parser: PROMETHEUS_PARSER

        - measurement_id: Usage
          subresource: RAM
          source: cAdvisor
          unit: bytes
          property: RAM.Usage
          query: |
            label_replace(
              sum(
                container_memory_working_set_bytes @{{now}}
              ) by (pod),
              "resource",
              "$1",
              "pod",
              "(.+)"
            )
          result_parser: PROMETHEUS_PARSER

        - measurement_id: Energy.Usage
          source: Kepler
          unit: milliwatt
          property: Energy.Usage
          query: |
            label_replace(
              sum(
                irate(
                  kepler_container_joules_total[5m] @{{now}}
                )
              ) by (pod_name),
              "resource",
              "$1",
              "pod_name",
              "(.+)"
            )
          result_parser: PROMETHEUS_PARSER

  k8s:
    in_cluster: true
  metadata:
    metadata_service_url: metadata-service
  prometheus:
    endpoint_port: 8080
  prometheus_client:
    url: prometheus.integration
